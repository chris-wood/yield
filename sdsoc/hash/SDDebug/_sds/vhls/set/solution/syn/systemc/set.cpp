// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "set.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic set::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic set::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> set::ap_ST_st1_fsm_0 = "1";
const sc_lv<2> set::ap_ST_st2_fsm_1 = "10";
const sc_lv<32> set::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> set::ap_const_lv1_1 = "1";
const int set::C_M_AXI_DATA_WIDTH = "100000";
const int set::C_M_AXI_GMEM_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int set::C_M_AXI_GMEM_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int set::C_M_AXI_GMEM_CACHE_VALUE = "11";
const sc_lv<32> set::ap_const_lv32_1 = "1";
const sc_lv<32> set::ap_const_lv32_2 = "10";
const sc_lv<32> set::ap_const_lv32_1F = "11111";
const sc_lv<1> set::ap_const_lv1_0 = "0";
const sc_lv<3> set::ap_const_lv3_0 = "000";
const sc_lv<2> set::ap_const_lv2_0 = "00";
const sc_lv<4> set::ap_const_lv4_0 = "0000";

set::set(sc_module_name name) : sc_module(name), mVcdFile(0) {
    set_gmem_m_axi_U = new set_gmem_m_axi<32,32,5,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>("set_gmem_m_axi_U");
    set_gmem_m_axi_U->AWVALID(m_axi_gmem_AWVALID);
    set_gmem_m_axi_U->AWREADY(m_axi_gmem_AWREADY);
    set_gmem_m_axi_U->AWADDR(m_axi_gmem_AWADDR);
    set_gmem_m_axi_U->AWID(m_axi_gmem_AWID);
    set_gmem_m_axi_U->AWLEN(m_axi_gmem_AWLEN);
    set_gmem_m_axi_U->AWSIZE(m_axi_gmem_AWSIZE);
    set_gmem_m_axi_U->AWBURST(m_axi_gmem_AWBURST);
    set_gmem_m_axi_U->AWLOCK(m_axi_gmem_AWLOCK);
    set_gmem_m_axi_U->AWCACHE(m_axi_gmem_AWCACHE);
    set_gmem_m_axi_U->AWPROT(m_axi_gmem_AWPROT);
    set_gmem_m_axi_U->AWQOS(m_axi_gmem_AWQOS);
    set_gmem_m_axi_U->AWREGION(m_axi_gmem_AWREGION);
    set_gmem_m_axi_U->AWUSER(m_axi_gmem_AWUSER);
    set_gmem_m_axi_U->WVALID(m_axi_gmem_WVALID);
    set_gmem_m_axi_U->WREADY(m_axi_gmem_WREADY);
    set_gmem_m_axi_U->WDATA(m_axi_gmem_WDATA);
    set_gmem_m_axi_U->WSTRB(m_axi_gmem_WSTRB);
    set_gmem_m_axi_U->WLAST(m_axi_gmem_WLAST);
    set_gmem_m_axi_U->WID(m_axi_gmem_WID);
    set_gmem_m_axi_U->WUSER(m_axi_gmem_WUSER);
    set_gmem_m_axi_U->ARVALID(m_axi_gmem_ARVALID);
    set_gmem_m_axi_U->ARREADY(m_axi_gmem_ARREADY);
    set_gmem_m_axi_U->ARADDR(m_axi_gmem_ARADDR);
    set_gmem_m_axi_U->ARID(m_axi_gmem_ARID);
    set_gmem_m_axi_U->ARLEN(m_axi_gmem_ARLEN);
    set_gmem_m_axi_U->ARSIZE(m_axi_gmem_ARSIZE);
    set_gmem_m_axi_U->ARBURST(m_axi_gmem_ARBURST);
    set_gmem_m_axi_U->ARLOCK(m_axi_gmem_ARLOCK);
    set_gmem_m_axi_U->ARCACHE(m_axi_gmem_ARCACHE);
    set_gmem_m_axi_U->ARPROT(m_axi_gmem_ARPROT);
    set_gmem_m_axi_U->ARQOS(m_axi_gmem_ARQOS);
    set_gmem_m_axi_U->ARREGION(m_axi_gmem_ARREGION);
    set_gmem_m_axi_U->ARUSER(m_axi_gmem_ARUSER);
    set_gmem_m_axi_U->RVALID(m_axi_gmem_RVALID);
    set_gmem_m_axi_U->RREADY(m_axi_gmem_RREADY);
    set_gmem_m_axi_U->RDATA(m_axi_gmem_RDATA);
    set_gmem_m_axi_U->RLAST(m_axi_gmem_RLAST);
    set_gmem_m_axi_U->RID(m_axi_gmem_RID);
    set_gmem_m_axi_U->RUSER(m_axi_gmem_RUSER);
    set_gmem_m_axi_U->RRESP(m_axi_gmem_RRESP);
    set_gmem_m_axi_U->BVALID(m_axi_gmem_BVALID);
    set_gmem_m_axi_U->BREADY(m_axi_gmem_BREADY);
    set_gmem_m_axi_U->BRESP(m_axi_gmem_BRESP);
    set_gmem_m_axi_U->BID(m_axi_gmem_BID);
    set_gmem_m_axi_U->BUSER(m_axi_gmem_BUSER);
    set_gmem_m_axi_U->ACLK(ap_clk);
    set_gmem_m_axi_U->ARESET(ap_rst_n_inv);
    set_gmem_m_axi_U->ACLK_EN(set_gmem_m_axi_U_ap_dummy_ce);
    set_gmem_m_axi_U->I_ARVALID(gmem_ARVALID);
    set_gmem_m_axi_U->I_ARREADY(gmem_ARREADY);
    set_gmem_m_axi_U->I_ARADDR(gmem_ARADDR);
    set_gmem_m_axi_U->I_ARID(gmem_ARID);
    set_gmem_m_axi_U->I_ARLEN(gmem_ARLEN);
    set_gmem_m_axi_U->I_ARSIZE(gmem_ARSIZE);
    set_gmem_m_axi_U->I_ARLOCK(gmem_ARLOCK);
    set_gmem_m_axi_U->I_ARCACHE(gmem_ARCACHE);
    set_gmem_m_axi_U->I_ARQOS(gmem_ARQOS);
    set_gmem_m_axi_U->I_ARPROT(gmem_ARPROT);
    set_gmem_m_axi_U->I_ARUSER(gmem_ARUSER);
    set_gmem_m_axi_U->I_ARBURST(gmem_ARBURST);
    set_gmem_m_axi_U->I_ARREGION(gmem_ARREGION);
    set_gmem_m_axi_U->I_RVALID(gmem_RVALID);
    set_gmem_m_axi_U->I_RREADY(gmem_RREADY);
    set_gmem_m_axi_U->I_RDATA(gmem_RDATA);
    set_gmem_m_axi_U->I_RID(gmem_RID);
    set_gmem_m_axi_U->I_RUSER(gmem_RUSER);
    set_gmem_m_axi_U->I_RRESP(gmem_RRESP);
    set_gmem_m_axi_U->I_RLAST(gmem_RLAST);
    set_gmem_m_axi_U->I_AWVALID(gmem_AWVALID);
    set_gmem_m_axi_U->I_AWREADY(gmem_AWREADY);
    set_gmem_m_axi_U->I_AWADDR(gmem_AWADDR);
    set_gmem_m_axi_U->I_AWID(gmem_AWID);
    set_gmem_m_axi_U->I_AWLEN(gmem_AWLEN);
    set_gmem_m_axi_U->I_AWSIZE(gmem_AWSIZE);
    set_gmem_m_axi_U->I_AWLOCK(gmem_AWLOCK);
    set_gmem_m_axi_U->I_AWCACHE(gmem_AWCACHE);
    set_gmem_m_axi_U->I_AWQOS(gmem_AWQOS);
    set_gmem_m_axi_U->I_AWPROT(gmem_AWPROT);
    set_gmem_m_axi_U->I_AWUSER(gmem_AWUSER);
    set_gmem_m_axi_U->I_AWBURST(gmem_AWBURST);
    set_gmem_m_axi_U->I_AWREGION(gmem_AWREGION);
    set_gmem_m_axi_U->I_WVALID(gmem_WVALID);
    set_gmem_m_axi_U->I_WREADY(gmem_WREADY);
    set_gmem_m_axi_U->I_WDATA(gmem_WDATA);
    set_gmem_m_axi_U->I_WID(gmem_WID);
    set_gmem_m_axi_U->I_WUSER(gmem_WUSER);
    set_gmem_m_axi_U->I_WLAST(gmem_WLAST);
    set_gmem_m_axi_U->I_WSTRB(gmem_WSTRB);
    set_gmem_m_axi_U->I_BVALID(gmem_BVALID);
    set_gmem_m_axi_U->I_BREADY(gmem_BREADY);
    set_gmem_m_axi_U->I_BRESP(gmem_BRESP);
    set_gmem_m_axi_U->I_BID(gmem_BID);
    set_gmem_m_axi_U->I_BUSER(gmem_BUSER);
    grp_set_assign_val_fu_58 = new set_assign_val("grp_set_assign_val_fu_58");
    grp_set_assign_val_fu_58->ap_clk(ap_clk);
    grp_set_assign_val_fu_58->ap_rst(ap_rst_n_inv);
    grp_set_assign_val_fu_58->ap_start(grp_set_assign_val_fu_58_ap_start);
    grp_set_assign_val_fu_58->ap_done(grp_set_assign_val_fu_58_ap_done);
    grp_set_assign_val_fu_58->ap_idle(grp_set_assign_val_fu_58_ap_idle);
    grp_set_assign_val_fu_58->ap_ready(grp_set_assign_val_fu_58_ap_ready);
    grp_set_assign_val_fu_58->m_axi_dest_AWVALID(grp_set_assign_val_fu_58_m_axi_dest_AWVALID);
    grp_set_assign_val_fu_58->m_axi_dest_AWREADY(grp_set_assign_val_fu_58_m_axi_dest_AWREADY);
    grp_set_assign_val_fu_58->m_axi_dest_AWADDR(grp_set_assign_val_fu_58_m_axi_dest_AWADDR);
    grp_set_assign_val_fu_58->m_axi_dest_AWID(grp_set_assign_val_fu_58_m_axi_dest_AWID);
    grp_set_assign_val_fu_58->m_axi_dest_AWLEN(grp_set_assign_val_fu_58_m_axi_dest_AWLEN);
    grp_set_assign_val_fu_58->m_axi_dest_AWSIZE(grp_set_assign_val_fu_58_m_axi_dest_AWSIZE);
    grp_set_assign_val_fu_58->m_axi_dest_AWBURST(grp_set_assign_val_fu_58_m_axi_dest_AWBURST);
    grp_set_assign_val_fu_58->m_axi_dest_AWLOCK(grp_set_assign_val_fu_58_m_axi_dest_AWLOCK);
    grp_set_assign_val_fu_58->m_axi_dest_AWCACHE(grp_set_assign_val_fu_58_m_axi_dest_AWCACHE);
    grp_set_assign_val_fu_58->m_axi_dest_AWPROT(grp_set_assign_val_fu_58_m_axi_dest_AWPROT);
    grp_set_assign_val_fu_58->m_axi_dest_AWQOS(grp_set_assign_val_fu_58_m_axi_dest_AWQOS);
    grp_set_assign_val_fu_58->m_axi_dest_AWREGION(grp_set_assign_val_fu_58_m_axi_dest_AWREGION);
    grp_set_assign_val_fu_58->m_axi_dest_AWUSER(grp_set_assign_val_fu_58_m_axi_dest_AWUSER);
    grp_set_assign_val_fu_58->m_axi_dest_WVALID(grp_set_assign_val_fu_58_m_axi_dest_WVALID);
    grp_set_assign_val_fu_58->m_axi_dest_WREADY(grp_set_assign_val_fu_58_m_axi_dest_WREADY);
    grp_set_assign_val_fu_58->m_axi_dest_WDATA(grp_set_assign_val_fu_58_m_axi_dest_WDATA);
    grp_set_assign_val_fu_58->m_axi_dest_WSTRB(grp_set_assign_val_fu_58_m_axi_dest_WSTRB);
    grp_set_assign_val_fu_58->m_axi_dest_WLAST(grp_set_assign_val_fu_58_m_axi_dest_WLAST);
    grp_set_assign_val_fu_58->m_axi_dest_WID(grp_set_assign_val_fu_58_m_axi_dest_WID);
    grp_set_assign_val_fu_58->m_axi_dest_WUSER(grp_set_assign_val_fu_58_m_axi_dest_WUSER);
    grp_set_assign_val_fu_58->m_axi_dest_ARVALID(grp_set_assign_val_fu_58_m_axi_dest_ARVALID);
    grp_set_assign_val_fu_58->m_axi_dest_ARREADY(grp_set_assign_val_fu_58_m_axi_dest_ARREADY);
    grp_set_assign_val_fu_58->m_axi_dest_ARADDR(grp_set_assign_val_fu_58_m_axi_dest_ARADDR);
    grp_set_assign_val_fu_58->m_axi_dest_ARID(grp_set_assign_val_fu_58_m_axi_dest_ARID);
    grp_set_assign_val_fu_58->m_axi_dest_ARLEN(grp_set_assign_val_fu_58_m_axi_dest_ARLEN);
    grp_set_assign_val_fu_58->m_axi_dest_ARSIZE(grp_set_assign_val_fu_58_m_axi_dest_ARSIZE);
    grp_set_assign_val_fu_58->m_axi_dest_ARBURST(grp_set_assign_val_fu_58_m_axi_dest_ARBURST);
    grp_set_assign_val_fu_58->m_axi_dest_ARLOCK(grp_set_assign_val_fu_58_m_axi_dest_ARLOCK);
    grp_set_assign_val_fu_58->m_axi_dest_ARCACHE(grp_set_assign_val_fu_58_m_axi_dest_ARCACHE);
    grp_set_assign_val_fu_58->m_axi_dest_ARPROT(grp_set_assign_val_fu_58_m_axi_dest_ARPROT);
    grp_set_assign_val_fu_58->m_axi_dest_ARQOS(grp_set_assign_val_fu_58_m_axi_dest_ARQOS);
    grp_set_assign_val_fu_58->m_axi_dest_ARREGION(grp_set_assign_val_fu_58_m_axi_dest_ARREGION);
    grp_set_assign_val_fu_58->m_axi_dest_ARUSER(grp_set_assign_val_fu_58_m_axi_dest_ARUSER);
    grp_set_assign_val_fu_58->m_axi_dest_RVALID(grp_set_assign_val_fu_58_m_axi_dest_RVALID);
    grp_set_assign_val_fu_58->m_axi_dest_RREADY(grp_set_assign_val_fu_58_m_axi_dest_RREADY);
    grp_set_assign_val_fu_58->m_axi_dest_RDATA(grp_set_assign_val_fu_58_m_axi_dest_RDATA);
    grp_set_assign_val_fu_58->m_axi_dest_RLAST(grp_set_assign_val_fu_58_m_axi_dest_RLAST);
    grp_set_assign_val_fu_58->m_axi_dest_RID(grp_set_assign_val_fu_58_m_axi_dest_RID);
    grp_set_assign_val_fu_58->m_axi_dest_RUSER(grp_set_assign_val_fu_58_m_axi_dest_RUSER);
    grp_set_assign_val_fu_58->m_axi_dest_RRESP(grp_set_assign_val_fu_58_m_axi_dest_RRESP);
    grp_set_assign_val_fu_58->m_axi_dest_BVALID(grp_set_assign_val_fu_58_m_axi_dest_BVALID);
    grp_set_assign_val_fu_58->m_axi_dest_BREADY(grp_set_assign_val_fu_58_m_axi_dest_BREADY);
    grp_set_assign_val_fu_58->m_axi_dest_BRESP(grp_set_assign_val_fu_58_m_axi_dest_BRESP);
    grp_set_assign_val_fu_58->m_axi_dest_BID(grp_set_assign_val_fu_58_m_axi_dest_BID);
    grp_set_assign_val_fu_58->m_axi_dest_BUSER(grp_set_assign_val_fu_58_m_axi_dest_BUSER);
    grp_set_assign_val_fu_58->data1(grp_set_assign_val_fu_58_data1);
    grp_set_assign_val_fu_58->tmp(grp_set_assign_val_fu_58_tmp);
    grp_set_assign_val_fu_58->src(grp_set_assign_val_fu_58_src);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( grp_set_assign_val_fu_58_ap_done );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_set_assign_val_fu_58_ap_done );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_ap_return);
    sensitive << ( grp_set_assign_val_fu_58_ap_done );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_bdd_20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_230);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_20 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_230 );

    SC_METHOD(thread_gmem_ARADDR);

    SC_METHOD(thread_gmem_ARBURST);

    SC_METHOD(thread_gmem_ARCACHE);

    SC_METHOD(thread_gmem_ARID);

    SC_METHOD(thread_gmem_ARLEN);

    SC_METHOD(thread_gmem_ARLOCK);

    SC_METHOD(thread_gmem_ARPROT);

    SC_METHOD(thread_gmem_ARQOS);

    SC_METHOD(thread_gmem_ARREGION);

    SC_METHOD(thread_gmem_ARSIZE);

    SC_METHOD(thread_gmem_ARUSER);

    SC_METHOD(thread_gmem_ARVALID);

    SC_METHOD(thread_gmem_AWADDR);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_set_assign_val_fu_58_m_axi_dest_AWADDR );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_gmem_AWBURST);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_set_assign_val_fu_58_m_axi_dest_AWBURST );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_gmem_AWCACHE);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_set_assign_val_fu_58_m_axi_dest_AWCACHE );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_gmem_AWID);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_set_assign_val_fu_58_m_axi_dest_AWID );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_gmem_AWLEN);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_set_assign_val_fu_58_m_axi_dest_AWLEN );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_gmem_AWLOCK);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_set_assign_val_fu_58_m_axi_dest_AWLOCK );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_gmem_AWPROT);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_set_assign_val_fu_58_m_axi_dest_AWPROT );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_gmem_AWQOS);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_set_assign_val_fu_58_m_axi_dest_AWQOS );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_gmem_AWREGION);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_set_assign_val_fu_58_m_axi_dest_AWREGION );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_gmem_AWSIZE);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_set_assign_val_fu_58_m_axi_dest_AWSIZE );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_gmem_AWUSER);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_set_assign_val_fu_58_m_axi_dest_AWUSER );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_gmem_AWVALID);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_set_assign_val_fu_58_m_axi_dest_AWVALID );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_gmem_BREADY);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_set_assign_val_fu_58_m_axi_dest_BREADY );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_gmem_RREADY);

    SC_METHOD(thread_gmem_WDATA);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_set_assign_val_fu_58_m_axi_dest_WDATA );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_gmem_WID);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_set_assign_val_fu_58_m_axi_dest_WID );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_gmem_WLAST);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_set_assign_val_fu_58_m_axi_dest_WLAST );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_gmem_WSTRB);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_set_assign_val_fu_58_m_axi_dest_WSTRB );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_gmem_WUSER);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_set_assign_val_fu_58_m_axi_dest_WUSER );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_gmem_WVALID);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( grp_set_assign_val_fu_58_m_axi_dest_WVALID );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_grp_set_assign_val_fu_58_ap_start);
    sensitive << ( grp_set_assign_val_fu_58_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_set_assign_val_fu_58_data1);
    sensitive << ( data1_reg_90 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_grp_set_assign_val_fu_58_m_axi_dest_ARREADY);

    SC_METHOD(thread_grp_set_assign_val_fu_58_m_axi_dest_AWREADY);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( gmem_AWREADY );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_grp_set_assign_val_fu_58_m_axi_dest_BID);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( gmem_BID );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_grp_set_assign_val_fu_58_m_axi_dest_BRESP);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( gmem_BRESP );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_grp_set_assign_val_fu_58_m_axi_dest_BUSER);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( gmem_BUSER );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_grp_set_assign_val_fu_58_m_axi_dest_BVALID);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( gmem_BVALID );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_grp_set_assign_val_fu_58_m_axi_dest_RDATA);

    SC_METHOD(thread_grp_set_assign_val_fu_58_m_axi_dest_RID);

    SC_METHOD(thread_grp_set_assign_val_fu_58_m_axi_dest_RLAST);

    SC_METHOD(thread_grp_set_assign_val_fu_58_m_axi_dest_RRESP);

    SC_METHOD(thread_grp_set_assign_val_fu_58_m_axi_dest_RUSER);

    SC_METHOD(thread_grp_set_assign_val_fu_58_m_axi_dest_RVALID);

    SC_METHOD(thread_grp_set_assign_val_fu_58_m_axi_dest_WREADY);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( gmem_WREADY );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_grp_set_assign_val_fu_58_src);
    sensitive << ( val_r );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_grp_set_assign_val_fu_58_tmp);
    sensitive << ( key );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_set_gmem_m_axi_U_ap_dummy_ce);

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_set_assign_val_fu_58_ap_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "01";
    grp_set_assign_val_fu_58_ap_start_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "set_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_gmem_AWVALID, "(port)m_axi_gmem_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem_AWREADY, "(port)m_axi_gmem_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem_AWADDR, "(port)m_axi_gmem_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem_AWID, "(port)m_axi_gmem_AWID");
    sc_trace(mVcdFile, m_axi_gmem_AWLEN, "(port)m_axi_gmem_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem_AWSIZE, "(port)m_axi_gmem_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem_AWBURST, "(port)m_axi_gmem_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem_AWLOCK, "(port)m_axi_gmem_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem_AWCACHE, "(port)m_axi_gmem_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem_AWPROT, "(port)m_axi_gmem_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem_AWQOS, "(port)m_axi_gmem_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem_AWREGION, "(port)m_axi_gmem_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem_AWUSER, "(port)m_axi_gmem_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem_WVALID, "(port)m_axi_gmem_WVALID");
    sc_trace(mVcdFile, m_axi_gmem_WREADY, "(port)m_axi_gmem_WREADY");
    sc_trace(mVcdFile, m_axi_gmem_WDATA, "(port)m_axi_gmem_WDATA");
    sc_trace(mVcdFile, m_axi_gmem_WSTRB, "(port)m_axi_gmem_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem_WLAST, "(port)m_axi_gmem_WLAST");
    sc_trace(mVcdFile, m_axi_gmem_WID, "(port)m_axi_gmem_WID");
    sc_trace(mVcdFile, m_axi_gmem_WUSER, "(port)m_axi_gmem_WUSER");
    sc_trace(mVcdFile, m_axi_gmem_ARVALID, "(port)m_axi_gmem_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem_ARREADY, "(port)m_axi_gmem_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem_ARADDR, "(port)m_axi_gmem_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem_ARID, "(port)m_axi_gmem_ARID");
    sc_trace(mVcdFile, m_axi_gmem_ARLEN, "(port)m_axi_gmem_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem_ARSIZE, "(port)m_axi_gmem_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem_ARBURST, "(port)m_axi_gmem_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem_ARLOCK, "(port)m_axi_gmem_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem_ARCACHE, "(port)m_axi_gmem_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem_ARPROT, "(port)m_axi_gmem_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem_ARQOS, "(port)m_axi_gmem_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem_ARREGION, "(port)m_axi_gmem_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem_ARUSER, "(port)m_axi_gmem_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem_RVALID, "(port)m_axi_gmem_RVALID");
    sc_trace(mVcdFile, m_axi_gmem_RREADY, "(port)m_axi_gmem_RREADY");
    sc_trace(mVcdFile, m_axi_gmem_RDATA, "(port)m_axi_gmem_RDATA");
    sc_trace(mVcdFile, m_axi_gmem_RLAST, "(port)m_axi_gmem_RLAST");
    sc_trace(mVcdFile, m_axi_gmem_RID, "(port)m_axi_gmem_RID");
    sc_trace(mVcdFile, m_axi_gmem_RUSER, "(port)m_axi_gmem_RUSER");
    sc_trace(mVcdFile, m_axi_gmem_RRESP, "(port)m_axi_gmem_RRESP");
    sc_trace(mVcdFile, m_axi_gmem_BVALID, "(port)m_axi_gmem_BVALID");
    sc_trace(mVcdFile, m_axi_gmem_BREADY, "(port)m_axi_gmem_BREADY");
    sc_trace(mVcdFile, m_axi_gmem_BRESP, "(port)m_axi_gmem_BRESP");
    sc_trace(mVcdFile, m_axi_gmem_BID, "(port)m_axi_gmem_BID");
    sc_trace(mVcdFile, m_axi_gmem_BUSER, "(port)m_axi_gmem_BUSER");
    sc_trace(mVcdFile, data, "(port)data");
    sc_trace(mVcdFile, key, "(port)key");
    sc_trace(mVcdFile, val_r, "(port)val_r");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_20, "ap_sig_bdd_20");
    sc_trace(mVcdFile, gmem_AWVALID, "gmem_AWVALID");
    sc_trace(mVcdFile, gmem_AWREADY, "gmem_AWREADY");
    sc_trace(mVcdFile, gmem_AWADDR, "gmem_AWADDR");
    sc_trace(mVcdFile, gmem_AWID, "gmem_AWID");
    sc_trace(mVcdFile, gmem_AWLEN, "gmem_AWLEN");
    sc_trace(mVcdFile, gmem_AWSIZE, "gmem_AWSIZE");
    sc_trace(mVcdFile, gmem_AWBURST, "gmem_AWBURST");
    sc_trace(mVcdFile, gmem_AWLOCK, "gmem_AWLOCK");
    sc_trace(mVcdFile, gmem_AWCACHE, "gmem_AWCACHE");
    sc_trace(mVcdFile, gmem_AWPROT, "gmem_AWPROT");
    sc_trace(mVcdFile, gmem_AWQOS, "gmem_AWQOS");
    sc_trace(mVcdFile, gmem_AWREGION, "gmem_AWREGION");
    sc_trace(mVcdFile, gmem_AWUSER, "gmem_AWUSER");
    sc_trace(mVcdFile, gmem_WVALID, "gmem_WVALID");
    sc_trace(mVcdFile, gmem_WREADY, "gmem_WREADY");
    sc_trace(mVcdFile, gmem_WDATA, "gmem_WDATA");
    sc_trace(mVcdFile, gmem_WSTRB, "gmem_WSTRB");
    sc_trace(mVcdFile, gmem_WLAST, "gmem_WLAST");
    sc_trace(mVcdFile, gmem_WID, "gmem_WID");
    sc_trace(mVcdFile, gmem_WUSER, "gmem_WUSER");
    sc_trace(mVcdFile, gmem_ARVALID, "gmem_ARVALID");
    sc_trace(mVcdFile, gmem_ARREADY, "gmem_ARREADY");
    sc_trace(mVcdFile, gmem_ARADDR, "gmem_ARADDR");
    sc_trace(mVcdFile, gmem_ARID, "gmem_ARID");
    sc_trace(mVcdFile, gmem_ARLEN, "gmem_ARLEN");
    sc_trace(mVcdFile, gmem_ARSIZE, "gmem_ARSIZE");
    sc_trace(mVcdFile, gmem_ARBURST, "gmem_ARBURST");
    sc_trace(mVcdFile, gmem_ARLOCK, "gmem_ARLOCK");
    sc_trace(mVcdFile, gmem_ARCACHE, "gmem_ARCACHE");
    sc_trace(mVcdFile, gmem_ARPROT, "gmem_ARPROT");
    sc_trace(mVcdFile, gmem_ARQOS, "gmem_ARQOS");
    sc_trace(mVcdFile, gmem_ARREGION, "gmem_ARREGION");
    sc_trace(mVcdFile, gmem_ARUSER, "gmem_ARUSER");
    sc_trace(mVcdFile, gmem_RVALID, "gmem_RVALID");
    sc_trace(mVcdFile, gmem_RREADY, "gmem_RREADY");
    sc_trace(mVcdFile, gmem_RDATA, "gmem_RDATA");
    sc_trace(mVcdFile, gmem_RLAST, "gmem_RLAST");
    sc_trace(mVcdFile, gmem_RID, "gmem_RID");
    sc_trace(mVcdFile, gmem_RUSER, "gmem_RUSER");
    sc_trace(mVcdFile, gmem_RRESP, "gmem_RRESP");
    sc_trace(mVcdFile, gmem_BVALID, "gmem_BVALID");
    sc_trace(mVcdFile, gmem_BREADY, "gmem_BREADY");
    sc_trace(mVcdFile, gmem_BRESP, "gmem_BRESP");
    sc_trace(mVcdFile, gmem_BID, "gmem_BID");
    sc_trace(mVcdFile, gmem_BUSER, "gmem_BUSER");
    sc_trace(mVcdFile, set_gmem_m_axi_U_ap_dummy_ce, "set_gmem_m_axi_U_ap_dummy_ce");
    sc_trace(mVcdFile, data1_reg_90, "data1_reg_90");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_ap_start, "grp_set_assign_val_fu_58_ap_start");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_ap_done, "grp_set_assign_val_fu_58_ap_done");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_ap_idle, "grp_set_assign_val_fu_58_ap_idle");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_ap_ready, "grp_set_assign_val_fu_58_ap_ready");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_AWVALID, "grp_set_assign_val_fu_58_m_axi_dest_AWVALID");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_AWREADY, "grp_set_assign_val_fu_58_m_axi_dest_AWREADY");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_AWADDR, "grp_set_assign_val_fu_58_m_axi_dest_AWADDR");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_AWID, "grp_set_assign_val_fu_58_m_axi_dest_AWID");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_AWLEN, "grp_set_assign_val_fu_58_m_axi_dest_AWLEN");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_AWSIZE, "grp_set_assign_val_fu_58_m_axi_dest_AWSIZE");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_AWBURST, "grp_set_assign_val_fu_58_m_axi_dest_AWBURST");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_AWLOCK, "grp_set_assign_val_fu_58_m_axi_dest_AWLOCK");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_AWCACHE, "grp_set_assign_val_fu_58_m_axi_dest_AWCACHE");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_AWPROT, "grp_set_assign_val_fu_58_m_axi_dest_AWPROT");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_AWQOS, "grp_set_assign_val_fu_58_m_axi_dest_AWQOS");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_AWREGION, "grp_set_assign_val_fu_58_m_axi_dest_AWREGION");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_AWUSER, "grp_set_assign_val_fu_58_m_axi_dest_AWUSER");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_WVALID, "grp_set_assign_val_fu_58_m_axi_dest_WVALID");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_WREADY, "grp_set_assign_val_fu_58_m_axi_dest_WREADY");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_WDATA, "grp_set_assign_val_fu_58_m_axi_dest_WDATA");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_WSTRB, "grp_set_assign_val_fu_58_m_axi_dest_WSTRB");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_WLAST, "grp_set_assign_val_fu_58_m_axi_dest_WLAST");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_WID, "grp_set_assign_val_fu_58_m_axi_dest_WID");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_WUSER, "grp_set_assign_val_fu_58_m_axi_dest_WUSER");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_ARVALID, "grp_set_assign_val_fu_58_m_axi_dest_ARVALID");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_ARREADY, "grp_set_assign_val_fu_58_m_axi_dest_ARREADY");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_ARADDR, "grp_set_assign_val_fu_58_m_axi_dest_ARADDR");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_ARID, "grp_set_assign_val_fu_58_m_axi_dest_ARID");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_ARLEN, "grp_set_assign_val_fu_58_m_axi_dest_ARLEN");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_ARSIZE, "grp_set_assign_val_fu_58_m_axi_dest_ARSIZE");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_ARBURST, "grp_set_assign_val_fu_58_m_axi_dest_ARBURST");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_ARLOCK, "grp_set_assign_val_fu_58_m_axi_dest_ARLOCK");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_ARCACHE, "grp_set_assign_val_fu_58_m_axi_dest_ARCACHE");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_ARPROT, "grp_set_assign_val_fu_58_m_axi_dest_ARPROT");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_ARQOS, "grp_set_assign_val_fu_58_m_axi_dest_ARQOS");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_ARREGION, "grp_set_assign_val_fu_58_m_axi_dest_ARREGION");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_ARUSER, "grp_set_assign_val_fu_58_m_axi_dest_ARUSER");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_RVALID, "grp_set_assign_val_fu_58_m_axi_dest_RVALID");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_RREADY, "grp_set_assign_val_fu_58_m_axi_dest_RREADY");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_RDATA, "grp_set_assign_val_fu_58_m_axi_dest_RDATA");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_RLAST, "grp_set_assign_val_fu_58_m_axi_dest_RLAST");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_RID, "grp_set_assign_val_fu_58_m_axi_dest_RID");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_RUSER, "grp_set_assign_val_fu_58_m_axi_dest_RUSER");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_RRESP, "grp_set_assign_val_fu_58_m_axi_dest_RRESP");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_BVALID, "grp_set_assign_val_fu_58_m_axi_dest_BVALID");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_BREADY, "grp_set_assign_val_fu_58_m_axi_dest_BREADY");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_BRESP, "grp_set_assign_val_fu_58_m_axi_dest_BRESP");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_BID, "grp_set_assign_val_fu_58_m_axi_dest_BID");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_m_axi_dest_BUSER, "grp_set_assign_val_fu_58_m_axi_dest_BUSER");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_data1, "grp_set_assign_val_fu_58_data1");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_tmp, "grp_set_assign_val_fu_58_tmp");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_src, "grp_set_assign_val_fu_58_src");
    sc_trace(mVcdFile, grp_set_assign_val_fu_58_ap_start_ap_start_reg, "grp_set_assign_val_fu_58_ap_start_ap_start_reg");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_230, "ap_sig_bdd_230");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("set.hdltvin.dat");
    mHdltvoutHandle.open("set.hdltvout.dat");
}

set::~set() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete set_gmem_m_axi_U;
    delete grp_set_assign_val_fu_58;
}

void set::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_set_assign_val_fu_58_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
             !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            grp_set_assign_val_fu_58_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_set_assign_val_fu_58_ap_ready.read())) {
            grp_set_assign_val_fu_58_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        data1_reg_90 = data.read().range(31, 2);
    }
}

void set::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_set_assign_val_fu_58_ap_done.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void set::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void set::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_set_assign_val_fu_58_ap_done.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void set::thread_ap_return() {
    ap_return = ap_const_lv32_0;
}

void set::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void set::thread_ap_sig_bdd_20() {
    ap_sig_bdd_20 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void set::thread_ap_sig_bdd_230() {
    ap_sig_bdd_230 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void set::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_20.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void set::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_230.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void set::thread_gmem_ARADDR() {
    gmem_ARADDR = ap_const_lv32_0;
}

void set::thread_gmem_ARBURST() {
    gmem_ARBURST = ap_const_lv2_0;
}

void set::thread_gmem_ARCACHE() {
    gmem_ARCACHE = ap_const_lv4_0;
}

void set::thread_gmem_ARID() {
    gmem_ARID = ap_const_lv1_0;
}

void set::thread_gmem_ARLEN() {
    gmem_ARLEN = ap_const_lv32_0;
}

void set::thread_gmem_ARLOCK() {
    gmem_ARLOCK = ap_const_lv2_0;
}

void set::thread_gmem_ARPROT() {
    gmem_ARPROT = ap_const_lv3_0;
}

void set::thread_gmem_ARQOS() {
    gmem_ARQOS = ap_const_lv4_0;
}

void set::thread_gmem_ARREGION() {
    gmem_ARREGION = ap_const_lv4_0;
}

void set::thread_gmem_ARSIZE() {
    gmem_ARSIZE = ap_const_lv3_0;
}

void set::thread_gmem_ARUSER() {
    gmem_ARUSER = ap_const_lv1_0;
}

void set::thread_gmem_ARVALID() {
    gmem_ARVALID = ap_const_logic_0;
}

void set::thread_gmem_AWADDR() {
    gmem_AWADDR = grp_set_assign_val_fu_58_m_axi_dest_AWADDR.read();
}

void set::thread_gmem_AWBURST() {
    gmem_AWBURST = grp_set_assign_val_fu_58_m_axi_dest_AWBURST.read();
}

void set::thread_gmem_AWCACHE() {
    gmem_AWCACHE = grp_set_assign_val_fu_58_m_axi_dest_AWCACHE.read();
}

void set::thread_gmem_AWID() {
    gmem_AWID = grp_set_assign_val_fu_58_m_axi_dest_AWID.read();
}

void set::thread_gmem_AWLEN() {
    gmem_AWLEN = grp_set_assign_val_fu_58_m_axi_dest_AWLEN.read();
}

void set::thread_gmem_AWLOCK() {
    gmem_AWLOCK = grp_set_assign_val_fu_58_m_axi_dest_AWLOCK.read();
}

void set::thread_gmem_AWPROT() {
    gmem_AWPROT = grp_set_assign_val_fu_58_m_axi_dest_AWPROT.read();
}

void set::thread_gmem_AWQOS() {
    gmem_AWQOS = grp_set_assign_val_fu_58_m_axi_dest_AWQOS.read();
}

void set::thread_gmem_AWREGION() {
    gmem_AWREGION = grp_set_assign_val_fu_58_m_axi_dest_AWREGION.read();
}

void set::thread_gmem_AWSIZE() {
    gmem_AWSIZE = grp_set_assign_val_fu_58_m_axi_dest_AWSIZE.read();
}

void set::thread_gmem_AWUSER() {
    gmem_AWUSER = grp_set_assign_val_fu_58_m_axi_dest_AWUSER.read();
}

void set::thread_gmem_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()))) {
        gmem_AWVALID = grp_set_assign_val_fu_58_m_axi_dest_AWVALID.read();
    } else {
        gmem_AWVALID = ap_const_logic_0;
    }
}

void set::thread_gmem_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()))) {
        gmem_BREADY = grp_set_assign_val_fu_58_m_axi_dest_BREADY.read();
    } else {
        gmem_BREADY = ap_const_logic_0;
    }
}

void set::thread_gmem_RREADY() {
    gmem_RREADY = ap_const_logic_0;
}

void set::thread_gmem_WDATA() {
    gmem_WDATA = grp_set_assign_val_fu_58_m_axi_dest_WDATA.read();
}

void set::thread_gmem_WID() {
    gmem_WID = grp_set_assign_val_fu_58_m_axi_dest_WID.read();
}

void set::thread_gmem_WLAST() {
    gmem_WLAST = grp_set_assign_val_fu_58_m_axi_dest_WLAST.read();
}

void set::thread_gmem_WSTRB() {
    gmem_WSTRB = grp_set_assign_val_fu_58_m_axi_dest_WSTRB.read();
}

void set::thread_gmem_WUSER() {
    gmem_WUSER = grp_set_assign_val_fu_58_m_axi_dest_WUSER.read();
}

void set::thread_gmem_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()))) {
        gmem_WVALID = grp_set_assign_val_fu_58_m_axi_dest_WVALID.read();
    } else {
        gmem_WVALID = ap_const_logic_0;
    }
}

void set::thread_grp_set_assign_val_fu_58_ap_start() {
    grp_set_assign_val_fu_58_ap_start = grp_set_assign_val_fu_58_ap_start_ap_start_reg.read();
}

void set::thread_grp_set_assign_val_fu_58_data1() {
    grp_set_assign_val_fu_58_data1 = data1_reg_90.read();
}

void set::thread_grp_set_assign_val_fu_58_m_axi_dest_ARREADY() {
    grp_set_assign_val_fu_58_m_axi_dest_ARREADY = ap_const_logic_0;
}

void set::thread_grp_set_assign_val_fu_58_m_axi_dest_AWREADY() {
    grp_set_assign_val_fu_58_m_axi_dest_AWREADY = gmem_AWREADY.read();
}

void set::thread_grp_set_assign_val_fu_58_m_axi_dest_BID() {
    grp_set_assign_val_fu_58_m_axi_dest_BID = gmem_BID.read();
}

void set::thread_grp_set_assign_val_fu_58_m_axi_dest_BRESP() {
    grp_set_assign_val_fu_58_m_axi_dest_BRESP = gmem_BRESP.read();
}

void set::thread_grp_set_assign_val_fu_58_m_axi_dest_BUSER() {
    grp_set_assign_val_fu_58_m_axi_dest_BUSER = gmem_BUSER.read();
}

void set::thread_grp_set_assign_val_fu_58_m_axi_dest_BVALID() {
    grp_set_assign_val_fu_58_m_axi_dest_BVALID = gmem_BVALID.read();
}

void set::thread_grp_set_assign_val_fu_58_m_axi_dest_RDATA() {
    grp_set_assign_val_fu_58_m_axi_dest_RDATA = ap_const_lv32_0;
}

void set::thread_grp_set_assign_val_fu_58_m_axi_dest_RID() {
    grp_set_assign_val_fu_58_m_axi_dest_RID = ap_const_lv1_0;
}

void set::thread_grp_set_assign_val_fu_58_m_axi_dest_RLAST() {
    grp_set_assign_val_fu_58_m_axi_dest_RLAST = ap_const_logic_0;
}

void set::thread_grp_set_assign_val_fu_58_m_axi_dest_RRESP() {
    grp_set_assign_val_fu_58_m_axi_dest_RRESP = ap_const_lv2_0;
}

void set::thread_grp_set_assign_val_fu_58_m_axi_dest_RUSER() {
    grp_set_assign_val_fu_58_m_axi_dest_RUSER = ap_const_lv1_0;
}

void set::thread_grp_set_assign_val_fu_58_m_axi_dest_RVALID() {
    grp_set_assign_val_fu_58_m_axi_dest_RVALID = ap_const_logic_0;
}

void set::thread_grp_set_assign_val_fu_58_m_axi_dest_WREADY() {
    grp_set_assign_val_fu_58_m_axi_dest_WREADY = gmem_WREADY.read();
}

void set::thread_grp_set_assign_val_fu_58_src() {
    grp_set_assign_val_fu_58_src = val_r.read();
}

void set::thread_grp_set_assign_val_fu_58_tmp() {
    grp_set_assign_val_fu_58_tmp = key.read();
}

void set::thread_set_gmem_m_axi_U_ap_dummy_ce() {
    set_gmem_m_axi_U_ap_dummy_ce = ap_const_logic_1;
}

void set::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_set_assign_val_fu_58_ap_done.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

void set::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWVALID\" :  \"" << m_axi_gmem_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_AWREADY\" :  \"" << m_axi_gmem_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWADDR\" :  \"" << m_axi_gmem_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWID\" :  \"" << m_axi_gmem_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLEN\" :  \"" << m_axi_gmem_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWSIZE\" :  \"" << m_axi_gmem_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWBURST\" :  \"" << m_axi_gmem_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLOCK\" :  \"" << m_axi_gmem_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWCACHE\" :  \"" << m_axi_gmem_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWPROT\" :  \"" << m_axi_gmem_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWQOS\" :  \"" << m_axi_gmem_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWREGION\" :  \"" << m_axi_gmem_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWUSER\" :  \"" << m_axi_gmem_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WVALID\" :  \"" << m_axi_gmem_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_WREADY\" :  \"" << m_axi_gmem_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WDATA\" :  \"" << m_axi_gmem_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WSTRB\" :  \"" << m_axi_gmem_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WLAST\" :  \"" << m_axi_gmem_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WID\" :  \"" << m_axi_gmem_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WUSER\" :  \"" << m_axi_gmem_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARVALID\" :  \"" << m_axi_gmem_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_ARREADY\" :  \"" << m_axi_gmem_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARADDR\" :  \"" << m_axi_gmem_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARID\" :  \"" << m_axi_gmem_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLEN\" :  \"" << m_axi_gmem_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARSIZE\" :  \"" << m_axi_gmem_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARBURST\" :  \"" << m_axi_gmem_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLOCK\" :  \"" << m_axi_gmem_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARCACHE\" :  \"" << m_axi_gmem_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARPROT\" :  \"" << m_axi_gmem_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARQOS\" :  \"" << m_axi_gmem_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARREGION\" :  \"" << m_axi_gmem_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARUSER\" :  \"" << m_axi_gmem_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RVALID\" :  \"" << m_axi_gmem_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_RREADY\" :  \"" << m_axi_gmem_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RDATA\" :  \"" << m_axi_gmem_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RLAST\" :  \"" << m_axi_gmem_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RID\" :  \"" << m_axi_gmem_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RUSER\" :  \"" << m_axi_gmem_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RRESP\" :  \"" << m_axi_gmem_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BVALID\" :  \"" << m_axi_gmem_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_BREADY\" :  \"" << m_axi_gmem_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BRESP\" :  \"" << m_axi_gmem_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BID\" :  \"" << m_axi_gmem_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BUSER\" :  \"" << m_axi_gmem_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data\" :  \"" << data.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"key\" :  \"" << key.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"val_r\" :  \"" << val_r.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

