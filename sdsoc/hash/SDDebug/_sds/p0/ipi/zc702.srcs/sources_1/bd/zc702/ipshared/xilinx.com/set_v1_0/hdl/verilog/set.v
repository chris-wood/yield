// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="set,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=8.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.437500,HLS_SYN_LAT=8,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=623,HLS_SYN_LUT=743}" *)

module set (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        data,
        key,
        val_r,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 2'b1;
parameter    ap_ST_st2_fsm_1 = 2'b10;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_true = 1'b1;
parameter    C_M_AXI_GMEM_WSTRB_WIDTH = (C_M_AXI_GMEM_DATA_WIDTH / ap_const_int64_8);
parameter    C_M_AXI_WSTRB_WIDTH = (C_M_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1 : 0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1 : 0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1 : 0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1 : 0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1 : 0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1 : 0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1 : 0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1 : 0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1 : 0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1 : 0] m_axi_gmem_BUSER;
input  [31:0] data;
input  [31:0] key;
input  [31:0] val_r;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm = 2'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_20;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
wire   [31:0] gmem_AWADDR;
wire   [0:0] gmem_AWID;
wire   [31:0] gmem_AWLEN;
wire   [2:0] gmem_AWSIZE;
wire   [1:0] gmem_AWBURST;
wire   [1:0] gmem_AWLOCK;
wire   [3:0] gmem_AWCACHE;
wire   [2:0] gmem_AWPROT;
wire   [3:0] gmem_AWQOS;
wire   [3:0] gmem_AWREGION;
wire   [0:0] gmem_AWUSER;
reg    gmem_WVALID;
wire    gmem_WREADY;
wire   [31:0] gmem_WDATA;
wire   [3:0] gmem_WSTRB;
wire    gmem_WLAST;
wire   [0:0] gmem_WID;
wire   [0:0] gmem_WUSER;
wire    gmem_ARVALID;
wire    gmem_ARREADY;
wire   [31:0] gmem_ARADDR;
wire   [0:0] gmem_ARID;
wire   [31:0] gmem_ARLEN;
wire   [2:0] gmem_ARSIZE;
wire   [1:0] gmem_ARBURST;
wire   [1:0] gmem_ARLOCK;
wire   [3:0] gmem_ARCACHE;
wire   [2:0] gmem_ARPROT;
wire   [3:0] gmem_ARQOS;
wire   [3:0] gmem_ARREGION;
wire   [0:0] gmem_ARUSER;
wire    gmem_RVALID;
wire    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
wire    set_gmem_m_axi_U_ap_dummy_ce;
reg   [29:0] data1_reg_90;
wire    grp_set_assign_val_fu_58_ap_start;
wire    grp_set_assign_val_fu_58_ap_done;
wire    grp_set_assign_val_fu_58_ap_idle;
wire    grp_set_assign_val_fu_58_ap_ready;
wire    grp_set_assign_val_fu_58_m_axi_dest_AWVALID;
wire    grp_set_assign_val_fu_58_m_axi_dest_AWREADY;
wire   [31:0] grp_set_assign_val_fu_58_m_axi_dest_AWADDR;
wire   [0:0] grp_set_assign_val_fu_58_m_axi_dest_AWID;
wire   [31:0] grp_set_assign_val_fu_58_m_axi_dest_AWLEN;
wire   [2:0] grp_set_assign_val_fu_58_m_axi_dest_AWSIZE;
wire   [1:0] grp_set_assign_val_fu_58_m_axi_dest_AWBURST;
wire   [1:0] grp_set_assign_val_fu_58_m_axi_dest_AWLOCK;
wire   [3:0] grp_set_assign_val_fu_58_m_axi_dest_AWCACHE;
wire   [2:0] grp_set_assign_val_fu_58_m_axi_dest_AWPROT;
wire   [3:0] grp_set_assign_val_fu_58_m_axi_dest_AWQOS;
wire   [3:0] grp_set_assign_val_fu_58_m_axi_dest_AWREGION;
wire   [0:0] grp_set_assign_val_fu_58_m_axi_dest_AWUSER;
wire    grp_set_assign_val_fu_58_m_axi_dest_WVALID;
wire    grp_set_assign_val_fu_58_m_axi_dest_WREADY;
wire   [31:0] grp_set_assign_val_fu_58_m_axi_dest_WDATA;
wire   [3:0] grp_set_assign_val_fu_58_m_axi_dest_WSTRB;
wire    grp_set_assign_val_fu_58_m_axi_dest_WLAST;
wire   [0:0] grp_set_assign_val_fu_58_m_axi_dest_WID;
wire   [0:0] grp_set_assign_val_fu_58_m_axi_dest_WUSER;
wire    grp_set_assign_val_fu_58_m_axi_dest_ARVALID;
wire    grp_set_assign_val_fu_58_m_axi_dest_ARREADY;
wire   [31:0] grp_set_assign_val_fu_58_m_axi_dest_ARADDR;
wire   [0:0] grp_set_assign_val_fu_58_m_axi_dest_ARID;
wire   [31:0] grp_set_assign_val_fu_58_m_axi_dest_ARLEN;
wire   [2:0] grp_set_assign_val_fu_58_m_axi_dest_ARSIZE;
wire   [1:0] grp_set_assign_val_fu_58_m_axi_dest_ARBURST;
wire   [1:0] grp_set_assign_val_fu_58_m_axi_dest_ARLOCK;
wire   [3:0] grp_set_assign_val_fu_58_m_axi_dest_ARCACHE;
wire   [2:0] grp_set_assign_val_fu_58_m_axi_dest_ARPROT;
wire   [3:0] grp_set_assign_val_fu_58_m_axi_dest_ARQOS;
wire   [3:0] grp_set_assign_val_fu_58_m_axi_dest_ARREGION;
wire   [0:0] grp_set_assign_val_fu_58_m_axi_dest_ARUSER;
wire    grp_set_assign_val_fu_58_m_axi_dest_RVALID;
wire    grp_set_assign_val_fu_58_m_axi_dest_RREADY;
wire   [31:0] grp_set_assign_val_fu_58_m_axi_dest_RDATA;
wire    grp_set_assign_val_fu_58_m_axi_dest_RLAST;
wire   [0:0] grp_set_assign_val_fu_58_m_axi_dest_RID;
wire   [0:0] grp_set_assign_val_fu_58_m_axi_dest_RUSER;
wire   [1:0] grp_set_assign_val_fu_58_m_axi_dest_RRESP;
wire    grp_set_assign_val_fu_58_m_axi_dest_BVALID;
wire    grp_set_assign_val_fu_58_m_axi_dest_BREADY;
wire   [1:0] grp_set_assign_val_fu_58_m_axi_dest_BRESP;
wire   [0:0] grp_set_assign_val_fu_58_m_axi_dest_BID;
wire   [0:0] grp_set_assign_val_fu_58_m_axi_dest_BUSER;
wire   [29:0] grp_set_assign_val_fu_58_data1;
wire   [31:0] grp_set_assign_val_fu_58_tmp;
wire   [31:0] grp_set_assign_val_fu_58_src;
reg    grp_set_assign_val_fu_58_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_230;
reg   [1:0] ap_NS_fsm;


set_gmem_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
set_gmem_m_axi_U(
    .AWVALID( m_axi_gmem_AWVALID ),
    .AWREADY( m_axi_gmem_AWREADY ),
    .AWADDR( m_axi_gmem_AWADDR ),
    .AWID( m_axi_gmem_AWID ),
    .AWLEN( m_axi_gmem_AWLEN ),
    .AWSIZE( m_axi_gmem_AWSIZE ),
    .AWBURST( m_axi_gmem_AWBURST ),
    .AWLOCK( m_axi_gmem_AWLOCK ),
    .AWCACHE( m_axi_gmem_AWCACHE ),
    .AWPROT( m_axi_gmem_AWPROT ),
    .AWQOS( m_axi_gmem_AWQOS ),
    .AWREGION( m_axi_gmem_AWREGION ),
    .AWUSER( m_axi_gmem_AWUSER ),
    .WVALID( m_axi_gmem_WVALID ),
    .WREADY( m_axi_gmem_WREADY ),
    .WDATA( m_axi_gmem_WDATA ),
    .WSTRB( m_axi_gmem_WSTRB ),
    .WLAST( m_axi_gmem_WLAST ),
    .WID( m_axi_gmem_WID ),
    .WUSER( m_axi_gmem_WUSER ),
    .ARVALID( m_axi_gmem_ARVALID ),
    .ARREADY( m_axi_gmem_ARREADY ),
    .ARADDR( m_axi_gmem_ARADDR ),
    .ARID( m_axi_gmem_ARID ),
    .ARLEN( m_axi_gmem_ARLEN ),
    .ARSIZE( m_axi_gmem_ARSIZE ),
    .ARBURST( m_axi_gmem_ARBURST ),
    .ARLOCK( m_axi_gmem_ARLOCK ),
    .ARCACHE( m_axi_gmem_ARCACHE ),
    .ARPROT( m_axi_gmem_ARPROT ),
    .ARQOS( m_axi_gmem_ARQOS ),
    .ARREGION( m_axi_gmem_ARREGION ),
    .ARUSER( m_axi_gmem_ARUSER ),
    .RVALID( m_axi_gmem_RVALID ),
    .RREADY( m_axi_gmem_RREADY ),
    .RDATA( m_axi_gmem_RDATA ),
    .RLAST( m_axi_gmem_RLAST ),
    .RID( m_axi_gmem_RID ),
    .RUSER( m_axi_gmem_RUSER ),
    .RRESP( m_axi_gmem_RRESP ),
    .BVALID( m_axi_gmem_BVALID ),
    .BREADY( m_axi_gmem_BREADY ),
    .BRESP( m_axi_gmem_BRESP ),
    .BID( m_axi_gmem_BID ),
    .BUSER( m_axi_gmem_BUSER ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( set_gmem_m_axi_U_ap_dummy_ce ),
    .I_ARVALID( gmem_ARVALID ),
    .I_ARREADY( gmem_ARREADY ),
    .I_ARADDR( gmem_ARADDR ),
    .I_ARID( gmem_ARID ),
    .I_ARLEN( gmem_ARLEN ),
    .I_ARSIZE( gmem_ARSIZE ),
    .I_ARLOCK( gmem_ARLOCK ),
    .I_ARCACHE( gmem_ARCACHE ),
    .I_ARQOS( gmem_ARQOS ),
    .I_ARPROT( gmem_ARPROT ),
    .I_ARUSER( gmem_ARUSER ),
    .I_ARBURST( gmem_ARBURST ),
    .I_ARREGION( gmem_ARREGION ),
    .I_RVALID( gmem_RVALID ),
    .I_RREADY( gmem_RREADY ),
    .I_RDATA( gmem_RDATA ),
    .I_RID( gmem_RID ),
    .I_RUSER( gmem_RUSER ),
    .I_RRESP( gmem_RRESP ),
    .I_RLAST( gmem_RLAST ),
    .I_AWVALID( gmem_AWVALID ),
    .I_AWREADY( gmem_AWREADY ),
    .I_AWADDR( gmem_AWADDR ),
    .I_AWID( gmem_AWID ),
    .I_AWLEN( gmem_AWLEN ),
    .I_AWSIZE( gmem_AWSIZE ),
    .I_AWLOCK( gmem_AWLOCK ),
    .I_AWCACHE( gmem_AWCACHE ),
    .I_AWQOS( gmem_AWQOS ),
    .I_AWPROT( gmem_AWPROT ),
    .I_AWUSER( gmem_AWUSER ),
    .I_AWBURST( gmem_AWBURST ),
    .I_AWREGION( gmem_AWREGION ),
    .I_WVALID( gmem_WVALID ),
    .I_WREADY( gmem_WREADY ),
    .I_WDATA( gmem_WDATA ),
    .I_WID( gmem_WID ),
    .I_WUSER( gmem_WUSER ),
    .I_WLAST( gmem_WLAST ),
    .I_WSTRB( gmem_WSTRB ),
    .I_BVALID( gmem_BVALID ),
    .I_BREADY( gmem_BREADY ),
    .I_BRESP( gmem_BRESP ),
    .I_BID( gmem_BID ),
    .I_BUSER( gmem_BUSER )
);

set_assign_val grp_set_assign_val_fu_58(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_set_assign_val_fu_58_ap_start ),
    .ap_done( grp_set_assign_val_fu_58_ap_done ),
    .ap_idle( grp_set_assign_val_fu_58_ap_idle ),
    .ap_ready( grp_set_assign_val_fu_58_ap_ready ),
    .m_axi_dest_AWVALID( grp_set_assign_val_fu_58_m_axi_dest_AWVALID ),
    .m_axi_dest_AWREADY( grp_set_assign_val_fu_58_m_axi_dest_AWREADY ),
    .m_axi_dest_AWADDR( grp_set_assign_val_fu_58_m_axi_dest_AWADDR ),
    .m_axi_dest_AWID( grp_set_assign_val_fu_58_m_axi_dest_AWID ),
    .m_axi_dest_AWLEN( grp_set_assign_val_fu_58_m_axi_dest_AWLEN ),
    .m_axi_dest_AWSIZE( grp_set_assign_val_fu_58_m_axi_dest_AWSIZE ),
    .m_axi_dest_AWBURST( grp_set_assign_val_fu_58_m_axi_dest_AWBURST ),
    .m_axi_dest_AWLOCK( grp_set_assign_val_fu_58_m_axi_dest_AWLOCK ),
    .m_axi_dest_AWCACHE( grp_set_assign_val_fu_58_m_axi_dest_AWCACHE ),
    .m_axi_dest_AWPROT( grp_set_assign_val_fu_58_m_axi_dest_AWPROT ),
    .m_axi_dest_AWQOS( grp_set_assign_val_fu_58_m_axi_dest_AWQOS ),
    .m_axi_dest_AWREGION( grp_set_assign_val_fu_58_m_axi_dest_AWREGION ),
    .m_axi_dest_AWUSER( grp_set_assign_val_fu_58_m_axi_dest_AWUSER ),
    .m_axi_dest_WVALID( grp_set_assign_val_fu_58_m_axi_dest_WVALID ),
    .m_axi_dest_WREADY( grp_set_assign_val_fu_58_m_axi_dest_WREADY ),
    .m_axi_dest_WDATA( grp_set_assign_val_fu_58_m_axi_dest_WDATA ),
    .m_axi_dest_WSTRB( grp_set_assign_val_fu_58_m_axi_dest_WSTRB ),
    .m_axi_dest_WLAST( grp_set_assign_val_fu_58_m_axi_dest_WLAST ),
    .m_axi_dest_WID( grp_set_assign_val_fu_58_m_axi_dest_WID ),
    .m_axi_dest_WUSER( grp_set_assign_val_fu_58_m_axi_dest_WUSER ),
    .m_axi_dest_ARVALID( grp_set_assign_val_fu_58_m_axi_dest_ARVALID ),
    .m_axi_dest_ARREADY( grp_set_assign_val_fu_58_m_axi_dest_ARREADY ),
    .m_axi_dest_ARADDR( grp_set_assign_val_fu_58_m_axi_dest_ARADDR ),
    .m_axi_dest_ARID( grp_set_assign_val_fu_58_m_axi_dest_ARID ),
    .m_axi_dest_ARLEN( grp_set_assign_val_fu_58_m_axi_dest_ARLEN ),
    .m_axi_dest_ARSIZE( grp_set_assign_val_fu_58_m_axi_dest_ARSIZE ),
    .m_axi_dest_ARBURST( grp_set_assign_val_fu_58_m_axi_dest_ARBURST ),
    .m_axi_dest_ARLOCK( grp_set_assign_val_fu_58_m_axi_dest_ARLOCK ),
    .m_axi_dest_ARCACHE( grp_set_assign_val_fu_58_m_axi_dest_ARCACHE ),
    .m_axi_dest_ARPROT( grp_set_assign_val_fu_58_m_axi_dest_ARPROT ),
    .m_axi_dest_ARQOS( grp_set_assign_val_fu_58_m_axi_dest_ARQOS ),
    .m_axi_dest_ARREGION( grp_set_assign_val_fu_58_m_axi_dest_ARREGION ),
    .m_axi_dest_ARUSER( grp_set_assign_val_fu_58_m_axi_dest_ARUSER ),
    .m_axi_dest_RVALID( grp_set_assign_val_fu_58_m_axi_dest_RVALID ),
    .m_axi_dest_RREADY( grp_set_assign_val_fu_58_m_axi_dest_RREADY ),
    .m_axi_dest_RDATA( grp_set_assign_val_fu_58_m_axi_dest_RDATA ),
    .m_axi_dest_RLAST( grp_set_assign_val_fu_58_m_axi_dest_RLAST ),
    .m_axi_dest_RID( grp_set_assign_val_fu_58_m_axi_dest_RID ),
    .m_axi_dest_RUSER( grp_set_assign_val_fu_58_m_axi_dest_RUSER ),
    .m_axi_dest_RRESP( grp_set_assign_val_fu_58_m_axi_dest_RRESP ),
    .m_axi_dest_BVALID( grp_set_assign_val_fu_58_m_axi_dest_BVALID ),
    .m_axi_dest_BREADY( grp_set_assign_val_fu_58_m_axi_dest_BREADY ),
    .m_axi_dest_BRESP( grp_set_assign_val_fu_58_m_axi_dest_BRESP ),
    .m_axi_dest_BID( grp_set_assign_val_fu_58_m_axi_dest_BID ),
    .m_axi_dest_BUSER( grp_set_assign_val_fu_58_m_axi_dest_BUSER ),
    .data1( grp_set_assign_val_fu_58_data1 ),
    .tmp( grp_set_assign_val_fu_58_tmp ),
    .src( grp_set_assign_val_fu_58_src )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_grp_set_assign_val_fu_58_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_set_assign_val_fu_58_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
            grp_set_assign_val_fu_58_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_set_assign_val_fu_58_ap_ready)) begin
            grp_set_assign_val_fu_58_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        data1_reg_90 <= {{data[ap_const_lv32_1F : ap_const_lv32_2]}};
    end
end

always @ (grp_set_assign_val_fu_58_ap_done or ap_sig_cseq_ST_st2_fsm_1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_logic_0 == grp_set_assign_val_fu_58_ap_done))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (grp_set_assign_val_fu_58_ap_done or ap_sig_cseq_ST_st2_fsm_1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_logic_0 == grp_set_assign_val_fu_58_ap_done))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_20) begin
    if (ap_sig_bdd_20) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_230) begin
    if (ap_sig_bdd_230) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or grp_set_assign_val_fu_58_m_axi_dest_AWVALID or ap_sig_cseq_ST_st2_fsm_1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) | (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1))) begin
        gmem_AWVALID = grp_set_assign_val_fu_58_m_axi_dest_AWVALID;
    end else begin
        gmem_AWVALID = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or grp_set_assign_val_fu_58_m_axi_dest_BREADY or ap_sig_cseq_ST_st2_fsm_1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) | (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1))) begin
        gmem_BREADY = grp_set_assign_val_fu_58_m_axi_dest_BREADY;
    end else begin
        gmem_BREADY = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or grp_set_assign_val_fu_58_m_axi_dest_WVALID or ap_sig_cseq_ST_st2_fsm_1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) | (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1))) begin
        gmem_WVALID = grp_set_assign_val_fu_58_m_axi_dest_WVALID;
    end else begin
        gmem_WVALID = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or grp_set_assign_val_fu_58_ap_done) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_logic_0 == grp_set_assign_val_fu_58_ap_done)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign ap_return = ap_const_lv32_0;


always @ (ap_rst_n) begin
    ap_rst_n_inv = ~ap_rst_n;
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_20 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_230 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

assign gmem_ARADDR = ap_const_lv32_0;

assign gmem_ARBURST = ap_const_lv2_0;

assign gmem_ARCACHE = ap_const_lv4_0;

assign gmem_ARID = ap_const_lv1_0;

assign gmem_ARLEN = ap_const_lv32_0;

assign gmem_ARLOCK = ap_const_lv2_0;

assign gmem_ARPROT = ap_const_lv3_0;

assign gmem_ARQOS = ap_const_lv4_0;

assign gmem_ARREGION = ap_const_lv4_0;

assign gmem_ARSIZE = ap_const_lv3_0;

assign gmem_ARUSER = ap_const_lv1_0;

assign gmem_ARVALID = ap_const_logic_0;

assign gmem_AWADDR = grp_set_assign_val_fu_58_m_axi_dest_AWADDR;

assign gmem_AWBURST = grp_set_assign_val_fu_58_m_axi_dest_AWBURST;

assign gmem_AWCACHE = grp_set_assign_val_fu_58_m_axi_dest_AWCACHE;

assign gmem_AWID = grp_set_assign_val_fu_58_m_axi_dest_AWID;

assign gmem_AWLEN = grp_set_assign_val_fu_58_m_axi_dest_AWLEN;

assign gmem_AWLOCK = grp_set_assign_val_fu_58_m_axi_dest_AWLOCK;

assign gmem_AWPROT = grp_set_assign_val_fu_58_m_axi_dest_AWPROT;

assign gmem_AWQOS = grp_set_assign_val_fu_58_m_axi_dest_AWQOS;

assign gmem_AWREGION = grp_set_assign_val_fu_58_m_axi_dest_AWREGION;

assign gmem_AWSIZE = grp_set_assign_val_fu_58_m_axi_dest_AWSIZE;

assign gmem_AWUSER = grp_set_assign_val_fu_58_m_axi_dest_AWUSER;

assign gmem_RREADY = ap_const_logic_0;

assign gmem_WDATA = grp_set_assign_val_fu_58_m_axi_dest_WDATA;

assign gmem_WID = grp_set_assign_val_fu_58_m_axi_dest_WID;

assign gmem_WLAST = grp_set_assign_val_fu_58_m_axi_dest_WLAST;

assign gmem_WSTRB = grp_set_assign_val_fu_58_m_axi_dest_WSTRB;

assign gmem_WUSER = grp_set_assign_val_fu_58_m_axi_dest_WUSER;

assign grp_set_assign_val_fu_58_ap_start = grp_set_assign_val_fu_58_ap_start_ap_start_reg;

assign grp_set_assign_val_fu_58_data1 = data1_reg_90;

assign grp_set_assign_val_fu_58_m_axi_dest_ARREADY = ap_const_logic_0;

assign grp_set_assign_val_fu_58_m_axi_dest_AWREADY = gmem_AWREADY;

assign grp_set_assign_val_fu_58_m_axi_dest_BID = gmem_BID;

assign grp_set_assign_val_fu_58_m_axi_dest_BRESP = gmem_BRESP;

assign grp_set_assign_val_fu_58_m_axi_dest_BUSER = gmem_BUSER;

assign grp_set_assign_val_fu_58_m_axi_dest_BVALID = gmem_BVALID;

assign grp_set_assign_val_fu_58_m_axi_dest_RDATA = ap_const_lv32_0;

assign grp_set_assign_val_fu_58_m_axi_dest_RID = ap_const_lv1_0;

assign grp_set_assign_val_fu_58_m_axi_dest_RLAST = ap_const_logic_0;

assign grp_set_assign_val_fu_58_m_axi_dest_RRESP = ap_const_lv2_0;

assign grp_set_assign_val_fu_58_m_axi_dest_RUSER = ap_const_lv1_0;

assign grp_set_assign_val_fu_58_m_axi_dest_RVALID = ap_const_logic_0;

assign grp_set_assign_val_fu_58_m_axi_dest_WREADY = gmem_WREADY;

assign grp_set_assign_val_fu_58_src = val_r;

assign grp_set_assign_val_fu_58_tmp = key;

assign set_gmem_m_axi_U_ap_dummy_ce = ap_const_logic_1;


endmodule //set

